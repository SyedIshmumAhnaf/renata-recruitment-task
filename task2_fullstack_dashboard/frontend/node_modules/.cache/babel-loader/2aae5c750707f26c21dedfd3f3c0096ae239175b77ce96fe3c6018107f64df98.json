{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[userRole,setUserRole]=useState(null);const[username,setUsername]=useState(null);const checkAuth=async()=>{try{const response=await axios.get('http://localhost:5000/api/check-auth',{withCredentials:true});if(response.data.authenticated){setIsAuthenticated(true);setUserRole(response.data.role);setUsername(response.data.username);}}catch(error){setIsAuthenticated(false);setUserRole(null);setUsername(null);}};useEffect(()=>{checkAuth();},[]);const login=async(username,password)=>{try{const response=await axios.post('http://localhost:5000/api/login',{username,password},{withCredentials:true});if(response.data.success){setIsAuthenticated(true);setUserRole(response.data.role);setUsername(response.data.username);}else{throw new Error(response.data.message);}}catch(error){throw error;}};const logout=async()=>{try{await axios.post('http://localhost:5000/api/logout',{},{withCredentials:true});setIsAuthenticated(false);setUserRole(null);setUsername(null);}catch(error){console.error('Logout failed:',error);}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,userRole,username,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","userRole","setUserRole","username","setUsername","checkAuth","response","get","withCredentials","data","authenticated","role","error","login","password","post","success","message","logout","console","Provider","value"],"sources":["D:/assignment/task2_fullstack_dashboard/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  userRole: string | null;\r\n  username: string | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n  const [username, setUsername] = useState<string | null>(null);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/check-auth', {\r\n        withCredentials: true\r\n      });\r\n      if (response.data.authenticated) {\r\n        setIsAuthenticated(true);\r\n        setUserRole(response.data.role);\r\n        setUsername(response.data.username);\r\n      }\r\n    } catch (error) {\r\n      setIsAuthenticated(false);\r\n      setUserRole(null);\r\n      setUsername(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', \r\n        { username, password },\r\n        { withCredentials: true }\r\n      );\r\n      if (response.data.success) {\r\n        setIsAuthenticated(true);\r\n        setUserRole(response.data.role);\r\n        setUsername(response.data.username);\r\n      } else {\r\n        throw new Error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/logout', {}, { withCredentials: true });\r\n      setIsAuthenticated(false);\r\n      setUserRole(null);\r\n      setUsername(null);\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, userRole, username, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}