{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\task2_fullstack_dashboard\\\\frontend\\\\src\\\\components\\\\GenderChart.tsx\";\nimport React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst GenderChart = ({\n  customers\n}) => {\n  const genderCount = customers.reduce((acc, customer) => {\n    acc[customer.Gender] = (acc[customer.Gender] || 0) + 1;\n    return acc;\n  }, {});\n  const data = {\n    labels: Object.keys(genderCount),\n    datasets: [{\n      data: Object.values(genderCount),\n      backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Gender Distribution'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Gender Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = GenderChart;\nexport default GenderChart;\nvar _c;\n$RefreshReg$(_c, \"GenderChart\");","map":{"version":3,"names":["React","Box","Typography","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","jsxDEV","_jsxDEV","register","GenderChart","customers","genderCount","reduce","acc","customer","Gender","data","labels","Object","keys","datasets","values","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","title","display","text","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/assignment/task2_fullstack_dashboard/frontend/src/components/GenderChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  ChartOptions\r\n} from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface Customer {\r\n  ID: number;\r\n  'Customer Name': string;\r\n  Division: string;\r\n  Gender: string;\r\n  MaritalStatus: string;\r\n  Age: number;\r\n  Income: number;\r\n}\r\n\r\ninterface GenderChartProps {\r\n  customers: Customer[];\r\n}\r\n\r\nconst GenderChart: React.FC<GenderChartProps> = ({ customers }) => {\r\n  const genderCount = customers.reduce((acc, customer) => {\r\n    acc[customer.Gender] = (acc[customer.Gender] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  const data = {\r\n    labels: Object.keys(genderCount),\r\n    datasets: [\r\n      {\r\n        data: Object.values(genderCount),\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.7)',\r\n          'rgba(54, 162, 235, 0.7)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options: ChartOptions<'pie'> = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Gender Distribution',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Gender Distribution\r\n      </Typography>\r\n      <Pie data={data} options={options} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GenderChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,OAAO,EACPC,MAAM,QAED,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCN,OAAO,CAACO,QAAQ,CACdN,UAAU,EACVC,OAAO,EACPC,MACF,CAAC;AAgBD,MAAMK,WAAuC,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACjE,MAAMC,WAAW,GAAGD,SAAS,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;IACtDD,GAAG,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAACF,GAAG,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACtD,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAA2B,CAAC;EAEhC,MAAMG,IAAI,GAAG;IACXC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACR,WAAW,CAAC;IAChCS,QAAQ,EAAE,CACR;MACEJ,IAAI,EAAEE,MAAM,CAACG,MAAM,CAACV,WAAW,CAAC;MAChCW,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,CAC1B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,CACxB;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAA4B,GAAG;IACnCC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACEzB,OAAA,CAACT,GAAG;IAAAmC,QAAA,gBACF1B,OAAA,CAACR,UAAU;MAACmC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbhC,OAAA,CAACF,GAAG;MAACW,IAAI,EAAEA,IAAK;MAACS,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACC,EAAA,GA7CI/B,WAAuC;AA+C7C,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}